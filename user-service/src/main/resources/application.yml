
server:
  port: 0 # random port 사용

spring:
  application:
    name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test
    username: sa

eureka:
  instance:
    # instance_id - eureka server에 기동중인 instance를 구분하기 위함. 설정하지 않으면 0번 포트 하나만 카운트됨.
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true # eureka 서버로부터 인스턴스들의 정보를 주기적으로 가져올 것인지를 설정하는 속성.
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to the simple E-commerce.

logging:
  level:
    com.example.userservice: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh
        # busrefresh: config server에 변경 요청 사항이 들어오면 rabbitmq에 변경 알림, rabbitmq는 다른 microservice에 변경 정보를 push