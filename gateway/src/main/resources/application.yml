server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      # 공통으로 실행되는 filter를 설정할때에는 global filter 로 설정해준다
      # global filter를 설정하면 프로세스에서 가장 먼저 실행되고 가장 나중에 실행된다.
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: String Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        #        - id: user-service
        #          uri: lb://USER-SERVICE  # eureka server에 정보 전달을 위한 주소
        #          predicates:
        #            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE  # eureka server에 정보 전달을 위한 주소
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE  # eureka server에 정보 전달을 위한 주소
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/h2-console
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**

        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
        # busrefresh: config server에 변경 요청 사항이 들어오면 rabbitmq에 변경 알림, rabbitmq는 다른 microservice에 변경 정보를 push